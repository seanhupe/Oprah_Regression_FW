{"name": "test_click_and_verify_all_main_section_links", "status": "failed", "statusDetails": {"message": "AssertionError: One or more main section links failed during navigation verification:\n  FAILURE: Link 'Watch OWN' (URL: https://www.oprah.com/app/own-tv.html) failed: 'Expect' object has no attribute 'string_containing'\n  FAILURE: Link 'TV Schedule' (URL: /app/own-tv-schedule.html) failed: 'Expect' object has no attribute 'string_containing'\n  FAILURE: Link 'Podcasts' (URL: /app/own-podcasts.html) failed: 'Expect' object has no attribute 'string_containing'\n  FAILURE: Link 'Newsletters' (URL: /newsletters.html) failed: 'Expect' object has no attribute 'string_containing'\n  FAILURE: Link 'Books' (URL: /app/books.html) failed: 'Expect' object has no attribute 'string_containing'\n  FAILURE: Link 'OWN Your Health' (URL: /app/own-your-health.html) failed: 'Expect' object has no attribute 'string_containing'\n  FAILURE: Link 'Inspiration' (URL: /app/inspiration.html) failed: 'Expect' object has no attribute 'string_containing'\n  FAILURE: Link 'Food' (URL: /app/food.html) failed: 'Expect' object has no attribute 'string_containing'\n  FAILURE: Link 'Home' (URL: /app/home.html) failed: 'Expect' object has no attribute 'string_containing'\n  FAILURE: Link 'Fashion' (URL: /app/fashion-beauty.html) failed: 'Expect' object has no attribute 'string_containing'\n  FAILURE: Link 'Help/FAQ' (URL: /app/helpfaq.html) failed: 'Expect' object has no attribute 'string_containing'\nassert not [\"FAILURE: Link 'Watch OWN' (URL: https://www.oprah.com/app/own-tv.html) failed: 'Expect' object has no attribute 'string_containing'\", \"FAILURE: Link 'TV Schedule' (URL: /app/own-tv-schedule.html) failed: 'Expect' object has no attribute 'string_containing'\", \"FAILURE: Link 'Podcasts' (URL: /app/own-podcasts.html) failed: 'Expect' object has no attribute 'string_containing'\", \"FAILURE: Link 'Newsletters' (URL: /newsletters.html) failed: 'Expect' object has no attribute 'string_containing'\", \"FAILURE: Link 'Books' (URL: /app/books.html) failed: 'Expect' object has no attribute 'string_containing'\", \"FAILURE: Link 'OWN Your Health' (URL: /app/own-your-health.html) failed: 'Expect' object has no attribute 'string_containing'\", ...]", "trace": "page = <Page url='https://www.oprah.com/index.html'>, base_url = 'https://www.oprah.com'\n\n    @allure.feature(\"Flyout Menu - Main Sections\")\n    @allure.story(\"Iterate and click all Main Section links to verify navigation\")\n    def test_click_and_verify_all_main_section_links(page: Page, base_url: str):\n        \"\"\"\n        This test iterates through all main section links in the flyout menu,\n        clicks each one, and verifies that the navigation is successful.\n        \"\"\"\n        oprah_home_page = OprahHomePage(page)\n    \n        print(f\"\\n--- Test: Navigating to homepage on {base_url} ---\")  # <--- ADD THIS\n        with allure.step(f\"Navigating to homepage and opening the flyout menu on {base_url}\"):\n            oprah_home_page.goto_homepage(base_url)\n            print(\"--- Test: Homepage loaded. Opening flyout menu ---\")  # <--- ADD THIS\n            oprah_home_page.open_flyout_menu()\n            print(\"--- Test: Flyout menu opened ---\")  # <--- ADD THIS\n            # Add an explicit, longer wait here to visually confirm the menu is open\n            page.wait_for_timeout(3000)  # <--- ADD THIS: Wait 3 seconds to see the opened menu\n    \n        with allure.step(\"Extracting all main section links for iteration\"):\n            links_to_test = oprah_home_page.get_main_section_links_data()\n            assert links_to_test, \"FAILURE: No main section links found to test.\"\n            print(f\"--- Test: Found {len(links_to_test)} links: {links_to_test} ---\")  # <--- ADD THIS\n            allure.attach(str(links_to_test), name=\"Links to be Tested\", attachment_type=allure.attachment_type.JSON)\n    \n        failed_navigations = []\n    \n        with allure.step(\"Iterating and clicking each link, then verifying navigation\"):\n            for index, link_data in enumerate(links_to_test):\n                link_text = link_data[\"text\"]\n                link_expected_url_part = link_data[\"url\"]\n    \n                print(\n                    f\"\\n--- Test: Clicking link {index + 1}: '{link_text}' (URL: {link_expected_url_part}) ---\")  # <--- ADD THIS\n                with allure.step(f\"Testing link {index + 1}: '{link_text}'\"):\n                    try:\n                        oprah_home_page.click_main_section_link(link_text)\n                        print(f\"--- Test: Clicked '{link_text}'. Waiting for navigation... ---\")  # <--- ADD THIS\n    \n                        # Add an explicit wait after clicking before assertions, if needed\n                        page.wait_for_timeout(2000)  # <--- ADD THIS: Wait 2 seconds to see the new page load\n    \n                        expect(page).to_have_url(expect.string_containing(link_expected_url_part), timeout=10000)\n                        expect(page).to_have_title(expect.string_containing(link_text), timeout=10000)\n                        print(\n                            f\"--- Test: Successfully navigated to {page.url} with title: {page.title()} ---\")  # <--- ADD THIS\n    \n                        allure.attach(f\"Successfully navigated to URL: {page.url} with title: {page.title()}\",\n                                      name=f\"Success for {link_text}\", attachment_type=allure.attachment_type.TEXT)\n    \n                        screenshot_name = f\"screenshot_navigated_to_{link_text.replace(' ', '_').replace('/', '_')}.png\"\n                        oprah_home_page.take_screenshot(path=screenshot_name)\n                        allure.attach.file(screenshot_name, name=f\"Navigated to '{link_text}'\",\n                                           attachment_type=allure.attachment_type.PNG)\n                        if os.path.exists(screenshot_name):\n                            os.remove(screenshot_name)\n    \n                    except Exception as e:\n                        error_message = f\"FAILURE: Link '{link_text}' (URL: {link_expected_url_part}) failed: {e}\"\n                        print(f\"!!! {error_message} !!!\")  # <--- ADD THIS\n                        allure.attach(error_message, name=f\"Failed: {link_text}\",\n                                      attachment_type=allure.attachment_type.TEXT)\n                        failed_navigations.append(error_message)\n    \n                        screenshot_name = f\"FAILED_screenshot_on_{link_text.replace(' ', '_').replace('/', '_')}.png\"\n                        oprah_home_page.take_screenshot(path=screenshot_name)\n                        allure.attach.file(screenshot_name, name=f\"FAILED State for '{link_text}'\",\n                                           attachment_type=allure.attachment_type.PNG)\n                        if os.path.exists(screenshot_name):\n                            os.remove(screenshot_name)\n    \n                    finally:\n                        print(f\"--- Test: Returning to homepage for next link ---\")  # <--- ADD THIS\n                        try:\n                            oprah_home_page.goto_homepage(base_url)\n                            oprah_home_page.open_flyout_menu()\n                            page.wait_for_timeout(1000)  # <--- ADD THIS: Brief pause after re-opening flyout\n                        except Exception as recovery_e:\n                            print(f\"!!! CRITICAL: Failed to return to homepage/flyout: {recovery_e} !!!\")  # <--- ADD THIS\n                            allure.attach(\n                                f\"Critical: Failed to return to homepage/flyout after '{link_text}' test: {recovery_e}\",\n                                name=\"Recovery Failure\", attachment_type=allure.attachment_type.TEXT)\n                            pytest.fail(\n                                f\"CRITICAL: Failed to return to homepage/flyout after '{link_text}' test. Subsequent tests might be unreliable.\")\n    \n>       assert not failed_navigations, f\"One or more main section links failed during navigation verification:\\n\" + \"\\n\".join(\n            failed_navigations)\nE       AssertionError: One or more main section links failed during navigation verification:\nE         FAILURE: Link 'Watch OWN' (URL: https://www.oprah.com/app/own-tv.html) failed: 'Expect' object has no attribute 'string_containing'\nE         FAILURE: Link 'TV Schedule' (URL: /app/own-tv-schedule.html) failed: 'Expect' object has no attribute 'string_containing'\nE         FAILURE: Link 'Podcasts' (URL: /app/own-podcasts.html) failed: 'Expect' object has no attribute 'string_containing'\nE         FAILURE: Link 'Newsletters' (URL: /newsletters.html) failed: 'Expect' object has no attribute 'string_containing'\nE         FAILURE: Link 'Books' (URL: /app/books.html) failed: 'Expect' object has no attribute 'string_containing'\nE         FAILURE: Link 'OWN Your Health' (URL: /app/own-your-health.html) failed: 'Expect' object has no attribute 'string_containing'\nE         FAILURE: Link 'Inspiration' (URL: /app/inspiration.html) failed: 'Expect' object has no attribute 'string_containing'\nE         FAILURE: Link 'Food' (URL: /app/food.html) failed: 'Expect' object has no attribute 'string_containing'\nE         FAILURE: Link 'Home' (URL: /app/home.html) failed: 'Expect' object has no attribute 'string_containing'\nE         FAILURE: Link 'Fashion' (URL: /app/fashion-beauty.html) failed: 'Expect' object has no attribute 'string_containing'\nE         FAILURE: Link 'Help/FAQ' (URL: /app/helpfaq.html) failed: 'Expect' object has no attribute 'string_containing'\nE       assert not [\"FAILURE: Link 'Watch OWN' (URL: https://www.oprah.com/app/own-tv.html) failed: 'Expect' object has no attribute 'string_containing'\", \"FAILURE: Link 'TV Schedule' (URL: /app/own-tv-schedule.html) failed: 'Expect' object has no attribute 'string_containing'\", \"FAILURE: Link 'Podcasts' (URL: /app/own-podcasts.html) failed: 'Expect' object has no attribute 'string_containing'\", \"FAILURE: Link 'Newsletters' (URL: /newsletters.html) failed: 'Expect' object has no attribute 'string_containing'\", \"FAILURE: Link 'Books' (URL: /app/books.html) failed: 'Expect' object has no attribute 'string_containing'\", \"FAILURE: Link 'OWN Your Health' (URL: /app/own-your-health.html) failed: 'Expect' object has no attribute 'string_containing'\", ...]\n\ntests\\test_oprah_website.py:97: AssertionError"}, "description": "\nThis test iterates through all main section links in the flyout menu,\nclicks each one, and verifies that the navigation is successful.\n", "steps": [{"name": "Navigating to homepage and opening the flyout menu on https://www.oprah.com", "status": "passed", "start": 1748468197982, "stop": 1748468204104}, {"name": "Extracting all main section links for iteration", "status": "passed", "attachments": [{"name": "Links to be Tested", "source": "bd84b768-043e-44a9-9fc2-9644ead727fd-attachment.json", "type": "application/json"}], "start": 1748468204105, "stop": 1748468204382}, {"name": "Iterating and clicking each link, then verifying navigation", "status": "passed", "steps": [{"name": "Testing link 1: 'Watch OWN'", "status": "passed", "attachments": [{"name": "Failed: Watch OWN", "source": "e142ec2f-44cc-45cc-abb7-489f7aa08ce7-attachment.txt", "type": "text/plain"}, {"name": "FAILED State for 'Watch OWN'", "source": "a23f1509-a0da-4948-a930-5dd83094b217-attachment.png", "type": "image/png"}], "start": 1748468204382, "stop": 1748468211532}, {"name": "Testing link 2: 'TV Schedule'", "status": "passed", "attachments": [{"name": "Failed: TV Schedule", "source": "cc10d440-c929-4cbd-a740-45d7aeec59e6-attachment.txt", "type": "text/plain"}, {"name": "FAILED State for 'TV Schedule'", "source": "c9f0c9c8-fb3d-4c92-afa2-009c4b3103d1-attachment.png", "type": "image/png"}], "start": 1748468211533, "stop": 1748468218398}, {"name": "Testing link 3: 'Podcasts'", "status": "passed", "attachments": [{"name": "Failed: Podcasts", "source": "d442f6c9-e9a4-4a9a-94a3-434af3eb850f-attachment.txt", "type": "text/plain"}, {"name": "FAILED State for 'Podcasts'", "source": "ab0006e1-c738-4221-aea4-9d4eaee97aae-attachment.png", "type": "image/png"}], "start": 1748468218398, "stop": 1748468225776}, {"name": "Testing link 4: 'Newsletters'", "status": "passed", "attachments": [{"name": "Failed: Newsletters", "source": "82374bab-4492-4fb4-a654-133387514126-attachment.txt", "type": "text/plain"}, {"name": "FAILED State for 'Newsletters'", "source": "87978f41-392d-4139-b723-2ab8672c1150-attachment.png", "type": "image/png"}], "start": 1748468225776, "stop": 1748468232664}, {"name": "Testing link 5: 'Books'", "status": "passed", "attachments": [{"name": "Failed: Books", "source": "f755ac6c-9e95-4765-b89d-97bdc2b0a4a8-attachment.txt", "type": "text/plain"}, {"name": "FAILED State for 'Books'", "source": "e006aa29-2297-4268-8ba6-bbba9203192c-attachment.png", "type": "image/png"}], "start": 1748468232665, "stop": 1748468239527}, {"name": "Testing link 6: 'OWN Your Health'", "status": "passed", "attachments": [{"name": "Failed: OWN Your Health", "source": "3c35db20-6056-4725-b8af-acaba90a397e-attachment.txt", "type": "text/plain"}, {"name": "FAILED State for 'OWN Your Health'", "source": "13c4c904-c7d9-4873-992b-65e75226b034-attachment.png", "type": "image/png"}], "start": 1748468239527, "stop": 1748468247215}, {"name": "Testing link 7: 'Inspiration'", "status": "passed", "attachments": [{"name": "Failed: Inspiration", "source": "dfbabda8-b867-4c86-80a6-624ab2d8ad3a-attachment.txt", "type": "text/plain"}, {"name": "FAILED State for 'Inspiration'", "source": "0451d527-1695-4f94-8b71-4673c31b2480-attachment.png", "type": "image/png"}], "start": 1748468247215, "stop": 1748468254408}, {"name": "Testing link 8: 'Food'", "status": "passed", "attachments": [{"name": "Failed: Food", "source": "2f60c0c8-a966-430c-a8a5-af812aa7eaf2-attachment.txt", "type": "text/plain"}, {"name": "FAILED State for 'Food'", "source": "f4a92cb4-65cc-4152-92b8-9ec45b83e631-attachment.png", "type": "image/png"}], "start": 1748468254409, "stop": 1748468262245}, {"name": "Testing link 9: 'Home'", "status": "passed", "attachments": [{"name": "Failed: Home", "source": "0c645268-decb-47e5-82cc-119e3c975902-attachment.txt", "type": "text/plain"}, {"name": "FAILED State for 'Home'", "source": "b662ade9-f35a-4d19-a065-f9f5920b0be0-attachment.png", "type": "image/png"}], "start": 1748468262245, "stop": 1748468269309}, {"name": "Testing link 10: 'Fashion'", "status": "passed", "attachments": [{"name": "Failed: Fashion", "source": "55e43533-a14e-497d-84e0-dd1b5d308c41-attachment.txt", "type": "text/plain"}, {"name": "FAILED State for 'Fashion'", "source": "b8abff9c-3999-4642-b370-c8b56c7bef57-attachment.png", "type": "image/png"}], "start": 1748468269310, "stop": 1748468276452}, {"name": "Testing link 11: 'Help/FAQ'", "status": "passed", "attachments": [{"name": "Failed: Help/FAQ", "source": "481a1214-2f1f-4238-bf18-0dd2671eedd6-attachment.txt", "type": "text/plain"}, {"name": "FAILED State for 'Help/FAQ'", "source": "9f082f1c-dae3-4e6d-9e12-8d3928565fb0-attachment.png", "type": "image/png"}], "start": 1748468276452, "stop": 1748468283440}], "start": 1748468204382, "stop": 1748468283440}], "start": 1748468197982, "stop": 1748468283441, "uuid": "a8f3cc8b-771a-498f-ac31-9551c94ce3b3", "historyId": "1dd7e4b04e4e17c43f8880f6f116d3f2", "testCaseId": "1dd7e4b04e4e17c43f8880f6f116d3f2", "fullName": "tests.test_oprah_website#test_click_and_verify_all_main_section_links", "labels": [{"name": "story", "value": "Iterate and click all Main Section links to verify navigation"}, {"name": "feature", "value": "Flyout Menu - Main Sections"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_oprah_website"}, {"name": "host", "value": "Dell-Laptop"}, {"name": "thread", "value": "3888-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_oprah_website"}]}